{"created_by":"Tampermonkey","version":"1","scripts":[{"name":"bbsAutoSign","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["http*://*/plugin.php?id=*sign*","http*://bbs.kafan.cn/*","http*://bbs.wstx.com/*","http*://bbs.gfan.com/*","http*://www.horou.com/*","http*://www.92jh.cn/*","http*://bbs.ntrqq.net/*","http*://www.gn00.com/*","http*://www.52pojie.cn/*","http*://zhidao.baidu.com/question/*","http*://wenku.baidu.com/task/browse/daily*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1571242711080},"enabled":true,"position":1,"file_url":"https://greasyfork.org/scripts/22511-bbsautosign/code/bbsAutoSign.user.js","uuid":"6c277686-27ea-46a7-aa1b-45413cee2b72","source":""},{"name":"Baidu Pan SuperKey","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["https://pan.baidu.com/share/init?surl=*","https://pan.baidu.com/wap/init?surl=*","https://pan.baidu.com/share/init?shareid=*","https://pan.baidu.com/wap/init?shareid=*","https://pan.baidu.com/s/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":["ypsuperkey.meek.com.cn"],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1571242711085},"enabled":false,"position":2,"file_url":"https://greasyfork.org/scripts/369544-baidu-pan-superkey/code/Baidu%20Pan%20SuperKey.user.js","uuid":"95a1639e-3403-4d96-b653-e4b8cc6b6927","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUJCUJhaWR1IFBhbiBTdXBlcktleQovLyBAbmFtZXNwYWNlCWFAYi5jCi8vIEBhdXRob3IJCWphc2FrZQovLyBAZGVzY3JpcHRpb24J5bqm55uY5LiH6IO96ZKl5YyZ77yM5LqR55uY5LiH6IO96ZKl5YyZ5omp5bGV5pS55oiQIEdNIOiEmuacrAovLyBAZGVzY3JpcHRpb24J5pyJ6ZyA6KaB55qE6K+35L2/55So5Y6f54mI5omp5bGV77yaaHR0cHM6Ly9hZGRvbnMubW96aWxsYS5vcmcvemgtQ04vZmlyZWZveC9hZGRvbi95cHN1cGVya2V5LwovLyBAaW5jbHVkZQkJaHR0cHM6Ly9wYW4uYmFpZHUuY29tL3NoYXJlL2luaXQ/c3VybD0qCi8vIEBpbmNsdWRlCQlodHRwczovL3Bhbi5iYWlkdS5jb20vd2FwL2luaXQ/c3VybD0qCi8vIEBpbmNsdWRlCQlodHRwczovL3Bhbi5iYWlkdS5jb20vc2hhcmUvaW5pdD9zaGFyZWlkPSoKLy8gQGluY2x1ZGUJCWh0dHBzOi8vcGFuLmJhaWR1LmNvbS93YXAvaW5pdD9zaGFyZWlkPSoKLy8gQGluY2x1ZGUJCWh0dHBzOi8vcGFuLmJhaWR1LmNvbS9zLyoKLy8gQGNoYXJzZXQJCVVURi04Ci8vIEB2ZXJzaW9uCQkwLjUuMgovLyBAZ3JhbnQJCUdNX3htbGh0dHBSZXF1ZXN0Ci8vIEBydW4tYXQJCWRvY3VtZW50LWVuZAovLyA9PS9Vc2VyU2NyaXB0PT0KCmZ1bmN0aW9uIHNoYXJlSGlzdG9yeShpZCwgcHcpIHsvL+acrOWcsOWOhuWPsuiusOW9le+8jOacieaViOacnzMw5aSpCglpZiAoIS8oPzpcd3wtKXs1LH0vLnRlc3QoaWQpKSByZXR1cm47Cgl2YXIgbG9nID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgic2hhcmVIaXN0b3J5IikgfHwgJ3t9JyksIEtleXMgPSBPYmplY3Qua2V5cyhsb2cpLmZpbHRlcih4ID0+IHggIT0gJ19sYXN0Q2hlY2snKSwgbGFzdCA9IGxvZ1snX2xhc3RDaGVjayddLCB0ID0gTWF0aC5yb3VuZChuZXcgRGF0ZSgpLmdldFRpbWUoKSAvIDFlMyksIGV4cCA9IHQgKyAzMCAqIDg2NDAwOwoJaWYgKCFsYXN0KSB7CgkJS2V5cy5mb3JFYWNoKHggPT4gewoJCQlpZiAobG9nW3hdLnNwbGl0KCd8JykubGVuZ3RoID09IDEpIGxvZ1t4XSArPSAnfCcgKyBleHA7CgkJfSk7CgkJbG9nWydfbGFzdENoZWNrJ10gPSB0OwoJCWxvY2FsU3RvcmFnZS5zZXRJdGVtKCJzaGFyZUhpc3RvcnkiLCBKU09OLnN0cmluZ2lmeShsb2cpKTsKCX0gZWxzZSBpZiAobGFzdCAmJiB0IC0gbGFzdCA+IDM2MDApIHsKCQlLZXlzLmZvckVhY2goeCA9PiB7CgkJCXZhciBhcnIgPSBsb2dbeF0uc3BsaXQoJ3wnKTsKCQkJaWYgKCthcnJbMV0gPCB0KSBsb2dbeF0gPSB1bmRlZmluZWQ7CgkJfSk7CgkJbG9nWydfbGFzdENoZWNrJ10gPSB0OwoJCWxvY2FsU3RvcmFnZS5zZXRJdGVtKCJzaGFyZUhpc3RvcnkiLCBKU09OLnN0cmluZ2lmeShsb2cpKTsKCX0KCWlmIChwdyA9PSB1bmRlZmluZWQpIHsKCQlyZXR1cm4gbG9nW2lkXSAmJiBsb2dbaWRdLnNwbGl0KCd8Jykuc2hpZnQoKSB8fCAnJzsKCX0gZWxzZSBpZiAoL15bYS16QS1aMC05XXs0fSQvLnRlc3QocHcpKSB7CgkJbG9nW2lkXSA9IHB3ICsgJ3wnICsgZXhwOwoJCWxvY2FsU3RvcmFnZS5zZXRJdGVtKCJzaGFyZUhpc3RvcnkiLCBKU09OLnN0cmluZ2lmeShsb2cpKTsKCX0KfQoKdmFyIGhhc2ggPSBsb2NhdGlvbi5oYXNoICYmIC9eIyhbYS16QS1aMC05XXs0fSkkLy50ZXN0KGxvY2F0aW9uLmhhc2gpICYmIFJlZ0V4cC4kMSwKCSQgPSB1bnNhZmVXaW5kb3cucmVxdWlyZSgnc3lzdGVtLWNvcmU6Y29udGV4dC9jb250ZXh0LmpzJykuaW5zdGFuY2VGb3JTeXN0ZW0ubGlicy5KUXVlcnksCglpbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5waWNrcHcgaW5wdXRbdGFiaW5kZXg9IjEiXSwgLmFjY2Vzcy1ib3ggaW5wdXQjYWNjZXNzQ29kZScpLAoJYnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBpY2twdyBhLmctYnV0dG9uLCAuYWNjZXNzLWJveCBhI2dldGZpbGVCdG4nKSwKCWxhYmVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBpY2twdyBkdCwgLmFjY2Vzcy1ib3ggbGFiZWxbZm9yPWFjY2Vzc0NvZGVdJyksCglzaGFyZUlEID0gKGxvY2F0aW9uLmhyZWYubWF0Y2goL1wvaW5pdFw/KD86c3VybHxzaGFyZWlkKT0oKD86XHd8LSkrKS8pIHx8IGxvY2F0aW9uLmhyZWYubWF0Y2goL1wvc1wvMSgoPzpcd3wtKSspLykpWzFdLAoJaGlzdG9yeSA9IHNoYXJlSGlzdG9yeShzaGFyZUlEKTsKCmlmIChsb2NhdGlvbi5ocmVmLmluZGV4T2YoJ2JhaWR1LmNvbS9zLycpID4gMCkgey8vdjUKCXZhciB1cmwgPSBsb2NhdGlvbi5ocmVmLnJlcGxhY2UoJ2JhaWR1LmNvbScsICdiYWlkdXdwLmNvbScpLm1hdGNoKC9eKFteI10rKS8pWzFdICsgKGxvY2F0aW9uLmhyZWYuaW5kZXhPZignPycpID09IC0xID8gJz8nIDogJyYnKSArICdwd2Q9JyArIGhpc3Rvcnk7CgkkKCc8YSBjbGFzcz0iZy1idXR0b24iIGhyZWY9IicgKyB1cmwgKyAnIiB0aXRsZT0i6L2s5YiwIFBhbmRvd25sb2FkIOe9kemhteeJiCI+PHNwYW4gY2xhc3M9ImctYnV0dG9uLXJpZ2h0Ij48ZW0gY2xhc3M9Imljb24gaWNvbi1waWNwcmUtZG93bmxvYWQiIHN0eWxlPSJjb2xvcjojZDYwOyI+PGZvbnQgY29sb3I9IiMwOTAiPjwvZW0+PHNwYW4gY2xhc3M9InRleHQiIHN0eWxlPSJ3aWR0aDogYXV0bzsiPjxmb250IGNvbG9yPSIjMDkwIj5QYW5kb3dubG9hZCDnvZHpobXniYg8L2ZvbnQ+PC9zcGFuPjwvc3Bhbj48L2E+JykuaW5zZXJ0QmVmb3JlKCcueC1idXR0b24tYm94IGEuZy1idXR0b25bZGF0YS1idXR0b24taWQ9YjNdJyk7Cn0KCmlmICghaW5wdXQgfHwgIWJ0bikgcmV0dXJuOwovL2lmIChsb2NhdGlvbi5oYXNoICYmIC9eIyhbYS16QS1aMC05XXs0fSkkLy50ZXN0KGxvY2F0aW9uLmhhc2gpKSByZXR1cm47Ly92MgoKbGFiZWwuc3R5bGUubWFyZ2luPSItNXB4IDAgMTBweCI7CmxhYmVsLmlubmVySFRNTCArPSAnPGJyPuW6puebmOS4h+iDvemSpeWMme+8mic7CgppZiAoaGFzaCB8fCBoaXN0b3J5KSB7Ly92NO+8jOS4gOenkuWQjgoJbGFiZWwuaW5uZXJIVE1MICs9ICflj5HnjrDmj5Dlj5bnoIHvvIgnLmZvbnRjb2xvcignZ3JlZW4nKSArIChoYXNoIHx8IGhpc3RvcnkpLmZvbnRjb2xvcigncmVkJykgKyAn77yJ77yM56iN5ZCO5aGr5YaZ5bm254K55Ye7Jy5mb250Y29sb3IoJ2dyZWVuJyk7CglzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewoJCWlucHV0LnZhbHVlID0gaGFzaCB8fCBoaXN0b3J5OwoJCWlmIChoYXNoKSBzaGFyZUhpc3Rvcnkoc2hhcmVJRCwgaGFzaCk7Ly/kv53lrZgKCQlidG4uY2xpY2soKTsKCX0sCgkxZTMpOwoJcmV0dXJuOwp9Cgp2YXIgdXJsID0naHR0cHM6Ly95cHN1cGVya2V5Lm1lZWsuY29tLmNuL2FwaS9pdGVtcy9CRFktJwoJCSsgc2hhcmVJRCArICc/YWNjZXNzX2tleT00ZnhOYmtLS0pYMnBBbTNiOEFFdTJ6VDVkMk1icUdiRCZjbGllbnRfdmVyc2lvbj0yMDE4LjgnOwoKR01feG1saHR0cFJlcXVlc3QoewoJbWV0aG9kOiAnR0VUJywKCXVybDogdXJsLAoJb25sb2FkOiBmdW5jdGlvbih4aHIpIHsKCQl2YXIgZSA9IEpTT04ucGFyc2UoeGhyLnJlc3BvbnNlVGV4dCk7CgkJY29uc29sZS5sb2coeGhyLnJlc3BvbnNlVGV4dCk7CgkJbGFiZWwuaW5uZXJIVE1MICs9IHhoci5zdGF0dXMgPT0gMjAwID8gKCfov57mjqXmiJDlip/vvIwnLmZvbnRjb2xvcignYmx1ZScpICsgKGUuYWNjZXNzX2NvZGUgPyAn5a+G56CB5bey6I635Y+WJy5mb250Y29sb3IoJ2JsdWUnKSA6ICfkvYblr4bnoIHmib7kuI3liLAnLmZvbnRjb2xvcigncmVkJykpKSA6IChlLm1lc3NhZ2UgKyAn77yM5pyN5Yqh5Zmo54q25oCB77yaJyArIHhoci5zdGF0dXNUZXh0ICsgJygnICsgeGhyLnN0YXR1cyArICcpJykuZm9udGNvbG9yKCdyZWQnKTsvL+eKtuaAgeaPkOekugoJCWlmICh4aHIuc3RhdHVzID09IDIwMCAmJiBlLmFjY2Vzc19jb2RlKSB7CgkJCWlucHV0LnZhbHVlID0gZS5hY2Nlc3NfY29kZTsvL+Whq+WGmeWvhueggQoJCQlzaGFyZUhpc3Rvcnkoc2hhcmVJRCwgZS5hY2Nlc3NfY29kZSk7CgkJCXNldFRpbWVvdXQoZnVuY3Rpb24oKXtidG4uY2xpY2soKTt9LCAxZTMpOy8v5LiA56eS5ZCO6Ieq5Yqo54K55Ye7CgkJfQoJfQp9KTs="},{"name":"Local YouTube Downloader","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["googlevideo.com"],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://*.youtube.com/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1571242711133},"enabled":false,"position":3,"file_url":"https://greasyfork.org/scripts/369400-local-youtube-downloader/code/Local%20YouTube%20Downloader.user.js","uuid":"2f8a9457-84ce-4781-b506-155701da9c87","source":"","requires":[{"meta":{"name":"vue.js","url":"https://unpkg.com/vue@2.6.10/dist/vue.js","ts":1582340732448,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"xfetch.min.js","url":"https://unpkg.com/xfetch-js@0.3.4/xfetch.min.js","ts":1582340731537,"mimetype":"text/javascript"},"source":"KChhLGIpPT57ImZ1bmN0aW9uIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoW10sYik6Im9iamVjdCI9PXR5cGVvZiBleHBvcnRzP21vZHVsZS5leHBvcnRzPWIoKTphLnhmPWIoKX0pKHRoaXMsKCk9Pntjb25zdCBhPVsiZ2V0IiwicG9zdCIsInB1dCIsInBhdGNoIiwiZGVsZXRlIiwiaGVhZCJdO2NsYXNzIGIgZXh0ZW5kcyBFcnJvcntjb25zdHJ1Y3RvcihhKXtzdXBlcihhLnN0YXR1c1RleHQpLHRoaXMubmFtZT0iSFRUUEVycm9yIix0aGlzLnJlc3BvbnNlPWF9fWNsYXNzIGMgZXh0ZW5kcyBQcm9taXNle31mb3IoY29uc3QgYSBvZlsiYXJyYXlCdWZmZXIiLCJibG9iIiwiZm9ybURhdGEiLCJqc29uIiwidGV4dCJdKWMucHJvdG90eXBlW2FdPWZ1bmN0aW9uKGIpe3JldHVybiB0aGlzLnRoZW4oYj0+YlthXSgpKS50aGVuKGJ8fChhPT5hKSl9O2NvbnN0e2Fzc2lnbjpkfT1PYmplY3QsZT1hPT5hLnJlZHVjZSgoYSxbYixjXSk9PihhW2JdPWMsYSkse30pLGY9KC4uLmEpPT5iPT5hLnNvbWUoYT0+InN0cmluZyI9PXR5cGVvZiBhP3R5cGVvZiBiPT1hOmIgaW5zdGFuY2VvZiBhKSxnPWYoInN0cmluZyIpLGg9Zigib2JqZWN0IiksaT1hPT5nKGEpfHxoKGEpLGo9YT0+e2lmKCFhLm9rKXRocm93IG5ldyBiKGEpO3JldHVybiBhfSxrPShoPXt9KT0+e2NvbnN0IGw9KGEsYj17fSk9PntkKGIsaCk7Y29uc3Qgaz1hPT5uZXcgYi5VUkxTZWFyY2hQYXJhbXMoYSkudG9TdHJpbmcoKSxsPW5ldyBiLlVSTChhLGIuYmFzZVVSSXx8dm9pZCAwKTtpZihiLmhlYWRlcnM/ZihiLkhlYWRlcnMpKGIuaGVhZGVycykmJihiLmhlYWRlcnM9ZShbLi4uYi5oZWFkZXJzLmVudHJpZXMoKV0pKTpiLmhlYWRlcnM9e30sYi5qc29uKWIuYm9keT1KU09OLnN0cmluZ2lmeShiLmpzb24pLGIuaGVhZGVyc1siQ29udGVudC1UeXBlIl09ImFwcGxpY2F0aW9uL2pzb24iO2Vsc2UgaWYoaShiLnVybGVuY29kZWQpKWIuYm9keT1nKGIudXJsZW5jb2RlZCk/Yi51cmxlbmNvZGVkOmsoYi51cmxlbmNvZGVkKSxiLmhlYWRlcnNbIkNvbnRlbnQtVHlwZSJdPSJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQiO2Vsc2UgaWYoZihiLkZvcm1EYXRhLCJvYmplY3QiKShiLmZvcm1EYXRhKSl7aWYoIWYoYi5Gb3JtRGF0YSkoYi5mb3JtRGF0YSkpe2NvbnN0IGE9bmV3IGIuRm9ybURhdGE7Zm9yKGNvbnN0W2MsZF1vZiBPYmplY3QuZW50cmllcyhiLmZvcm1EYXRhKSlhLmFwcGVuZChjLGQpO2IuZm9ybURhdGE9YX1iLmJvZHk9Yi5mb3JtRGF0YX1yZXR1cm4gYi5xcyYmKGcoYi5xcykmJihiLnFzPShhPT5lKFsuLi5uZXcgYi5VUkxTZWFyY2hQYXJhbXMoYSkuZW50cmllcygpXSkpKGIucXMpKSxsLnNlYXJjaD1rKGQoZShbLi4ubC5zZWFyY2hQYXJhbXMuZW50cmllcygpXSksYi5xcykpKSxiLmNyZWRlbnRpYWxzfHwoYi5jcmVkZW50aWFscz0ic2FtZS1vcmlnaW4iKSxjLnJlc29sdmUoYi5mZXRjaChsLGIpLnRoZW4oaikpfTtmb3IoY29uc3QgYiBvZiBhKWxbYl09KGEsYz17fSk9PihjLm1ldGhvZD1iLnRvVXBwZXJDYXNlKCksbChhLGMpKTtyZXR1cm4gbC5leHRlbmQ9YT0+ayhkKHt9LGgsYSkpLGwuSFRUUEVycm9yPWIsbH0sbD0idW5kZWZpbmVkIiE9dHlwZW9mIGRvY3VtZW50LG09InVuZGVmaW5lZCIhPXR5cGVvZiBzZWxmO3JldHVybiBtP2soe2ZldGNoOmZldGNoLmJpbmQoc2VsZiksVVJMLFJlc3BvbnNlLFVSTFNlYXJjaFBhcmFtcyxIZWFkZXJzLEZvcm1EYXRhLGJhc2VVUkk6bD9kb2N1bWVudC5iYXNlVVJJOiIifSk6aygpfSk7"},{"meta":{"name":"ffmpeg.min.js","url":"https://unpkg.com/@ffmpeg/ffmpeg@0.5.2/dist/ffmpeg.min.js","ts":1582340731801,"mimetype":"text/javascript"},"source":""}]},{"name":"74vip_tool","options":{"awareOfChrome":false,"check_for_updates":true,"comment":"","compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://v.qq.com/x/cover/*","*://v.qq.com/x/page/*","*://www.iqiyi.com/*","*://v.youku.com/v_show/*","*://www.mgtv.com/b/*","*://tv.sohu.com/v/*","*://film.sohu.com/album/*","*://www.le.com/ptv/vplay/*","*://video.tudou.com/v/*","*://v.pptv.com/show/*","https://pan.baidu.com/share/init?surl=*","https://pan.baidu.com/wap/init?surl=*","https://pan.baidu.com/share/init?shareid=*","https://pan.baidu.com/wap/init?shareid=*","https://pan.baidu.com/s/*"],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":["ypsuperkey.meek.com.cn"],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{"user_interface":"o[]"},"ts":1582339844653},"enabled":true,"position":4,"file_url":"https://raw.githubusercontent.com/91en/91en/master/74vip_tool.js","uuid":"9e6dd5de-47c5-424e-86ae-92a263e7a2c9","source":"","requires":[{"meta":{"name":"jquery.min.js","url":"https://cdn.bootcss.com/jquery/1.12.4/jquery.min.js","ts":1583724391413,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"gm4-polyfill.js","url":"https://greasemonkey.github.io/gm4-polyfill/gm4-polyfill.js","ts":1583724394923,"mimetype":"text/javascript"},"source":"LyoKVGhpcyBoZWxwZXIgc2NyaXB0IGJyaWRnZXMgY29tcGF0aWJpbGl0eSBiZXR3ZWVuIHRoZSBHcmVhc2Vtb25rZXkgNCBBUElzIGFuZApleGlzdGluZy9sZWdhY3kgQVBJcy4gIFNheSBmb3IgZXhhbXBsZSB5b3VyIHVzZXIgc2NyaXB0IGluY2x1ZGVzCgogICAgLy8gQGdyYW50IEdNX2dldFZhbHVlCgpBbmQgeW91J2QgbGlrZSB0byBiZSBjb21wYXRpYmxlIHdpdGggYm90aCBHcmVhc2Vtb25rZXkgMyBhbmQgR3JlYXNlbW9ua2V5IDQKKGFuZCBmb3IgdGhhdCBtYXR0ZXIgYWxsIHZlcnNpb25zIG9mIFZpb2xlbnRtb25rZXksIFRhbXBlcm1vbmtleSwgYW5kIGFueSBvdGhlcgp1c2VyIHNjcmlwdCBlbmdpbmUpLiAgQWRkOgoKICAgIC8vIEBncmFudCBHTS5nZXRWYWx1ZQogICAgLy8gQHJlcXVpcmUgaHR0cHM6Ly9ncmVhc2Vtb25rZXkuZ2l0aHViLmlvL2dtNC1wb2x5ZmlsbC9nbTQtcG9seWZpbGwuanMKCkFuZCBzd2l0Y2ggdG8gdGhlIG5ldyAoR00tZG90KSBBUElzLCB3aGljaCByZXR1cm4gcHJvbWlzZXMuICBJZiB5b3VyIHNjcmlwdAppcyBydW5uaW5nIGluIGFuIGVuZ2luZSB0aGF0IGRvZXMgbm90IHByb3ZpZGUgdGhlIG5ldyBhc3luY2hyb25vdXMgQVBJcywgdGhpcwpoZWxwZXIgd2lsbCBhZGQgdGhlbSwgYmFzZWQgb24gdGhlIG9sZCBBUElzLgoKSWYgeW91IHVzZSBgYXdhaXRgIGF0IHRoZSB0b3AgbGV2ZWwsIHlvdSdsbCBuZWVkIHRvIHdyYXAgeW91ciBzY3JpcHQgaW4gYW4KYGFzeW5jYCBmdW5jdGlvbiB0byBiZSBjb21wYXRpYmxlIHdpdGggYW55IHVzZXIgc2NyaXB0IGVuZ2luZSBiZXNpZGVzCkdyZWFzZW1vbmtleSA0LgoKICAgIChhc3luYyAoKSA9PiB7CiAgICBsZXQgeCA9IGF3YWl0IEdNLmdldFZhbHVlKCd4Jyk7CiAgICB9KSgpOwoqLwoKaWYgKHR5cGVvZiBHTSA9PSAndW5kZWZpbmVkJykgewogIHRoaXMuR00gPSB7fTsKfQoKCmlmICh0eXBlb2YgR01fYWRkU3R5bGUgPT0gJ3VuZGVmaW5lZCcpIHsKICB0aGlzLkdNX2FkZFN0eWxlID0gKGFDc3MpID0+IHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIGxldCBoZWFkID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2hlYWQnKVswXTsKICAgIGlmIChoZWFkKSB7CiAgICAgIGxldCBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7CiAgICAgIHN0eWxlLnNldEF0dHJpYnV0ZSgndHlwZScsICd0ZXh0L2NzcycpOwogICAgICBzdHlsZS50ZXh0Q29udGVudCA9IGFDc3M7CiAgICAgIGhlYWQuYXBwZW5kQ2hpbGQoc3R5bGUpOwogICAgICByZXR1cm4gc3R5bGU7CiAgICB9CiAgICByZXR1cm4gbnVsbDsKICB9Owp9CgoKaWYgKHR5cGVvZiBHTV9yZWdpc3Rlck1lbnVDb21tYW5kID09ICd1bmRlZmluZWQnKSB7CiAgdGhpcy5HTV9yZWdpc3Rlck1lbnVDb21tYW5kID0gKGNhcHRpb24sIGNvbW1hbmRGdW5jLCBhY2Nlc3NLZXkpID0+IHsKICAgIGlmICghZG9jdW1lbnQuYm9keSkgewogICAgICBpZiAoZG9jdW1lbnQucmVhZHlTdGF0ZSA9PT0gJ2xvYWRpbmcnCiAgICAgICAgJiYgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50ICYmIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5sb2NhbE5hbWUgPT09ICdodG1sJykgewogICAgICAgIG5ldyBNdXRhdGlvbk9ic2VydmVyKChtdXRhdGlvbnMsIG9ic2VydmVyKSA9PiB7CiAgICAgICAgICBpZiAoZG9jdW1lbnQuYm9keSkgewogICAgICAgICAgICBvYnNlcnZlci5kaXNjb25uZWN0KCk7CiAgICAgICAgICAgIEdNX3JlZ2lzdGVyTWVudUNvbW1hbmQoY2FwdGlvbiwgY29tbWFuZEZ1bmMsIGFjY2Vzc0tleSk7CiAgICAgICAgICB9CiAgICAgICAgfSkub2JzZXJ2ZShkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsIHtjaGlsZExpc3Q6IHRydWV9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICBjb25zb2xlLmVycm9yKCdHTV9yZWdpc3Rlck1lbnVDb21tYW5kIGdvdCBubyBib2R5LicpOwogICAgICB9CiAgICAgIHJldHVybjsKICAgIH0KICAgIGxldCBjb250ZXh0TWVudSA9IGRvY3VtZW50LmJvZHkuZ2V0QXR0cmlidXRlKCdjb250ZXh0bWVudScpOwogICAgbGV0IG1lbnUgPSAoY29udGV4dE1lbnUgPyBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdtZW51IycgKyBjb250ZXh0TWVudSkgOiBudWxsKTsKICAgIGlmICghbWVudSkgewogICAgICBtZW51ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbWVudScpOwogICAgICBtZW51LnNldEF0dHJpYnV0ZSgnaWQnLCAnZ20tcmVnaXN0ZXJlZC1tZW51Jyk7CiAgICAgIG1lbnUuc2V0QXR0cmlidXRlKCd0eXBlJywgJ2NvbnRleHQnKTsKICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChtZW51KTsKICAgICAgZG9jdW1lbnQuYm9keS5zZXRBdHRyaWJ1dGUoJ2NvbnRleHRtZW51JywgJ2dtLXJlZ2lzdGVyZWQtbWVudScpOwogICAgfQogICAgbGV0IG1lbnVJdGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbWVudWl0ZW0nKTsKICAgIG1lbnVJdGVtLnRleHRDb250ZW50ID0gY2FwdGlvbjsKICAgIG1lbnVJdGVtLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgY29tbWFuZEZ1bmMsIHRydWUpOwogICAgbWVudS5hcHBlbmRDaGlsZChtZW51SXRlbSk7CiAgfTsKfQoKCmlmICh0eXBlb2YgR01fZ2V0UmVzb3VyY2VUZXh0ID09ICd1bmRlZmluZWQnKSB7CiAgdGhpcy5HTV9nZXRSZXNvdXJjZVRleHQgPSAoYVJlcykgPT4gewogICAgJ3VzZSBzdHJpY3QnOwogICAgcmV0dXJuIEdNLmdldFJlc291cmNlVXJsKGFSZXMpCiAgICAgIC50aGVuKHVybCA9PiBmZXRjaCh1cmwpKQogICAgICAudGhlbihyZXNwID0+IHJlc3AudGV4dCgpKQogICAgICAuY2F0Y2goZnVuY3Rpb24oZXJyb3IpIHsKICAgICAgICBHTS5sb2coJ1JlcXVlc3QgZmFpbGVkJywgZXJyb3IpOwogICAgICAgIHJldHVybiBudWxsOwogICAgICB9KTsKICB9Owp9CgoKT2JqZWN0LmVudHJpZXMoewogICdsb2cnOiBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpLCAgLy8gUGFsZSBNb29uIGNvbXBhdGliaWxpdHkuICBTZWUgIzEzLgogICdpbmZvJzogR01faW5mbywKfSkuZm9yRWFjaCgoW25ld0tleSwgb2xkXSkgPT4gewogIGlmIChvbGQgJiYgKHR5cGVvZiBHTVtuZXdLZXldID09ICd1bmRlZmluZWQnKSkgewogICAgR01bbmV3S2V5XSA9IG9sZDsKICB9Cn0pOwoKCk9iamVjdC5lbnRyaWVzKHsKICAnR01fYWRkU3R5bGUnOiAnYWRkU3R5bGUnLAogICdHTV9kZWxldGVWYWx1ZSc6ICdkZWxldGVWYWx1ZScsCiAgJ0dNX2dldFJlc291cmNlVVJMJzogJ2dldFJlc291cmNlVXJsJywKICAnR01fZ2V0VmFsdWUnOiAnZ2V0VmFsdWUnLAogICdHTV9saXN0VmFsdWVzJzogJ2xpc3RWYWx1ZXMnLAogICdHTV9ub3RpZmljYXRpb24nOiAnbm90aWZpY2F0aW9uJywKICAnR01fb3BlbkluVGFiJzogJ29wZW5JblRhYicsCiAgJ0dNX3JlZ2lzdGVyTWVudUNvbW1hbmQnOiAncmVnaXN0ZXJNZW51Q29tbWFuZCcsCiAgJ0dNX3NldENsaXBib2FyZCc6ICdzZXRDbGlwYm9hcmQnLAogICdHTV9zZXRWYWx1ZSc6ICdzZXRWYWx1ZScsCiAgJ0dNX3htbGh0dHBSZXF1ZXN0JzogJ3htbEh0dHBSZXF1ZXN0JywKICAnR01fZ2V0UmVzb3VyY2VUZXh0JzogJ2dldFJlc291cmNlVGV4dCcsCn0pLmZvckVhY2goKFtvbGRLZXksIG5ld0tleV0pID0+IHsKICBsZXQgb2xkID0gdGhpc1tvbGRLZXldOwogIGlmIChvbGQgJiYgKHR5cGVvZiBHTVtuZXdLZXldID09ICd1bmRlZmluZWQnKSkgewogICAgR01bbmV3S2V5XSA9IGZ1bmN0aW9uKC4uLmFyZ3MpIHsKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKICAgICAgICB0cnkgewogICAgICAgICAgcmVzb2x2ZShvbGQuYXBwbHkodGhpcywgYXJncykpOwogICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgIHJlamVjdChlKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfTsKICB9Cn0pOwo="}]},{"name":"知乎、简书、csdn、实验楼剪切板消毒","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":[],"orig_matches":["*://*.shiyanlou.com/*","*://*.jianshu.com/*","*://*.zhihu.com/*","*://*.csdn.net/*","*://*.imooc.com/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1571242711207},"enabled":true,"position":5,"file_url":"https://greasyfork.org/scripts/367724-%E7%9F%A5%E4%B9%8E-%E7%AE%80%E4%B9%A6-csdn-%E5%AE%9E%E9%AA%8C%E6%A5%BC%E5%89%AA%E5%88%87%E6%9D%BF%E6%B6%88%E6%AF%92/code/%E7%9F%A5%E4%B9%8E%E3%80%81%E7%AE%80%E4%B9%A6%E3%80%81csdn%E3%80%81%E5%AE%9E%E9%AA%8C%E6%A5%BC%E5%89%AA%E5%88%87%E6%9D%BF%E6%B6%88%E6%AF%92.user.js","uuid":"004e6f2e-5dce-4f69-bc92-9a4411ef422b","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICDnn6XkuY7jgIHnroDkuabjgIFjc2Ru44CB5a6e6aqM5qW85Ymq5YiH5p2/5raI5q+SCi8vIEBuYW1lc3BhY2UgICAgaHR0cDovL3RhbXBlcm1vbmtleS5uZXQvCi8vIEB2ZXJzaW9uICAgICAgMC4yLjIKLy8gQGRlc2NyaXB0aW9uICDlpI3liLbkuIDkupvnvZHnq5nmloflrZfml7bvvIzkvJrlnKjkvaDliarliIfmnb/nmoTmnIDlkI7liqDkuIrpk77mjqXku4DkuYjnmoTkv6Hmga/vvIzlvojorqjljozjgILmiorov5nkupvpop3lpJbnmoTkuJzopb/lhajlubLmjokKLy8gQGF1dGhvciAgICAgICBZb3UKLy8gQG1hdGNoICAgICAgICAqOi8vKi5zaGl5YW5sb3UuY29tLyoKLy8gQG1hdGNoICAgICAgICAqOi8vKi5qaWFuc2h1LmNvbS8qCi8vIEBtYXRjaCAgICAgICAgKjovLyouemhpaHUuY29tLyoKLy8gQG1hdGNoICAgICAgICAqOi8vKi5jc2RuLm5ldC8qCi8vIEBtYXRjaCAgICAgICAgKjovLyouaW1vb2MuY29tLyoKLy8gQGdyYW50ICAgICAgICBub25lCi8vID09L1VzZXJTY3JpcHQ9PQoKKGZ1bmN0aW9uKCkgewogICAgJ3VzZSBzdHJpY3QnOwoKICAgIC8vIFlvdXIgY29kZSBoZXJlLi4uCiAgICBmdW5jdGlvbiBhZGRMaW5rKGUpIHsKICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgIHZhciBwYWdlbGluayA9ICdcblJlYWQgbW9yZTogJyArIGRvY3VtZW50LmxvY2F0aW9uLmhyZWYsCiAgICBjb3B5dGV4dCA9IHdpbmRvdy5nZXRTZWxlY3Rpb24oKTsKICAgIHZhciBjbGlwZGF0YSA9IGUuY2xpcGJvYXJkRGF0YSB8fCB3aW5kb3cuY2xpcGJvYXJkRGF0YTsKICAgIGlmIChjbGlwZGF0YSkgewogICAgICAgIGNsaXBkYXRhLnNldERhdGEoJ1RleHQnLCBjb3B5dGV4dCk7CiAgICB9Cn0KZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY29weScsIGFkZExpbmspOwp9KSgpOw=="},{"name":"站酷网添加图片下载按钮","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["http*://www.zcool.com.cn/work/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1571242711217},"enabled":true,"position":6,"file_url":"https://greasyfork.org/scripts/371416-%E7%AB%99%E9%85%B7%E7%BD%91%E6%B7%BB%E5%8A%A0%E5%9B%BE%E7%89%87%E4%B8%8B%E8%BD%BD%E6%8C%89%E9%92%AE/code/%E7%AB%99%E9%85%B7%E7%BD%91%E6%B7%BB%E5%8A%A0%E5%9B%BE%E7%89%87%E4%B8%8B%E8%BD%BD%E6%8C%89%E9%92%AE.user.js","uuid":"8027ffb7-fffa-49aa-b6d0-7f8b7d225cfd","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICDnq5nphbfnvZHmt7vliqDlm77niYfkuIvovb3mjInpkq4KLy8gQG5hbWVzcGFjZSAgICBodHRwczovL2dyZWFzeWZvcmsub3JnL3poLUNOL3VzZXJzLzE5MzEzMy1wYW5hCi8vIEBob21lcGFnZSAgICAgaHR0cHM6Ly93d3cuc2FpbGJvYXR3ZWIuY29tCi8vIEB2ZXJzaW9uICAgICAgMi40LjMKLy8gQGRlc2NyaXB0aW9uICDmt7vliqDkuIvovb3ljp/lm77mjInpkq4KLy8gQGF1dGhvciAgICAgICBwYW5hCi8vIEBpbmNsdWRlICAgICAgaHR0cCo6Ly93d3cuemNvb2wuY29tLmNuL3dvcmsvKgovLyBAZ3JhbnQgICAgICAgIG5vbmUKLy8gQHJlcXVpcmUgICAgICBodHRwczovL2Nkbi5ib290Y3NzLmNvbS9GaWxlU2F2ZXIuanMvMS4zLjgvRmlsZVNhdmVyLm1pbi5qcwovLyBAcmVxdWlyZSAgICAgIGh0dHBzOi8vZ3JlYXN5Zm9yay5vcmcvc2NyaXB0cy8zNzYxNTctZG93bmxvYWRwaWMvY29kZS9kb3dubG9hZFBpYy5qcz92ZXJzaW9uPTczMzk2NwovLyA9PS9Vc2VyU2NyaXB0PT0KCihmdW5jdGlvbigpIHsKCSd1c2Ugc3RyaWN0JzsKCWNvbnN0IFpDT09MX1ZBTFVFID0gewoJCUdST1VQX1JFRzogL14oaHR0cDp8aHR0cHM6KT9cL1wvaW1nXC56Y29vbFwuY25cL1swLTlhLXovXC1fLl0rXC4oanBnfGpwZWd8cG5nfGJtcHxnaWYpL2ksCgkJRE9XTkxPQURfQlROOiB7CgkJCUlDT05fVVJMOiAndXJsKGh0dHBzOi8vc3RhdGljLmhlbGxvcmYuY29tL3YxODA4MTcxMTU3MDAvaGVsbG9yZi9pbWFnZXMvaWNvbnBpYy1yLWNhY2hlLWhvdmVyLnN2ZyknLAoJCQlCQUNLR1JPVU5EX0NPTE9SOiB7CgkJCQlNT1VTRV9MRUFWRTogJ3JnYmEoMCwgMCwgMCwgMC41KScsCgkJCQlNT1VTRV9FTlRFUjogJ3JnYmEoMCwgMCwgMCwgMC44KScKCQkJfQoJCX0KCX07Cgl2YXIgbnVtYmVyX29iaiA9IG5ldyBEb3dubG9hZF9OdW1iZXJfT2JqKCk7CgoJZnVuY3Rpb24gdXBkYXRlX1Byb2dyZXNzKF9jb3VudF9udW0sIHBlcmNlbnRfY29tcGxldGUsIGJ0bikgewoJCWJ0bi5pbm5lclRleHQgPSB0aGlzLmdldFRleHRWYWx1ZSgpICsgJygnICsgcGVyY2VudF9jb21wbGV0ZSArICclKScKCX0KCWZ1bmN0aW9uIHRyYW5zZmVyX0NvbXBsZXRlKF9jb3VudF9udW0sIGJ0bikgewoJCWJ0bi5pbm5lclRleHQgPSB0aGlzLmdldFRleHRWYWx1ZSgpICsgJygxMDAlKSc7CgkJYnRuLmRvd25sb2FkQ29tcGxldGVkKCk7CgkJbnVtYmVyX29iai5hZGRDb21wbGV0ZWQoKTsKCQkkKCdwI3Byb2dyZXNzQnRuJykudGV4dChudW1iZXJfb2JqLmdldFByb2dyZXNzU3RyaW5nKCkpCgl9CglmdW5jdGlvbiBkb3dubG9hZF9TdGFydChfY291bnQsIGJ0bikgewoJCWJ0bi5pbm5lclRleHQgKz0gJyguLi4pJzsKCQludW1iZXJfb2JqLmFkZFRvdGFsKCk7CgkJJCgicCNwcm9ncmVzc0J0biIpLnRleHQobnVtYmVyX29iai5nZXRQcm9ncmVzc1N0cmluZygpKQoJfQoJZnVuY3Rpb24gYWRkX0Rvd25sb2FkX0J0bihpbWdfc3JjLCBjb3VudCkgewoJCWxldCBkb3dubG9hZF9vYmogPSBuZXcgRG93bmxvYWRfUGljX09iaihpbWdfc3JjLCBjb3VudCk7CgkJbGV0IGRvd25sb2FkX2J0biA9IGRvd25sb2FkX29iai5jcmVhdGVEb3dubG9hZEJ0bihkb3dubG9hZF9TdGFydCwgc2F2ZUFzLCB1cGRhdGVfUHJvZ3Jlc3MsIHRyYW5zZmVyX0NvbXBsZXRlLCB7CgkJCSdwb3NpdGlvbic6ICdhYnNvbHV0ZScsCgkJCSd0b3AnOiAnMzBweCcsCgkJCSdsZWZ0JzogJzMwcHgnLAoJCQknZGlzcGxheSc6ICdibG9jaycsCgkJCSdib3JkZXItcmFkaXVzJzogJzRweCcsCgkJCSd0ZXh0LWFsaWduJzogJ2NlbnRlcicsCgkJCSd2ZXJ0aWNhbC1hbGlnbic6ICdtaWRkbGUnLAoJCQknem9vbSc6ICcxJywKCQkJJ3BhZGRpbmctbGVmdCc6ICczNnB4JywKCQkJJ3BhZGRpbmctcmlnaHQnOiAnMTJweCcsCgkJCSdoZWlnaHQnOiAnMjhweCcsCgkJCSdjb2xvcic6ICcjZmZmJywKCQkJJ2ZvbnQtc2l6ZSc6ICcxMnB4JywKCQkJJ2xpbmUtaGVpZ2h0JzogJzI4cHgnLAoJCQknYmFja2dyb3VuZC1jb2xvcic6IFpDT09MX1ZBTFVFLkRPV05MT0FEX0JUTi5CQUNLR1JPVU5EX0NPTE9SLk1PVVNFX0xFQVZFLAoJCQknYmFja2dyb3VuZC1pbWFnZSc6IFpDT09MX1ZBTFVFLkRPV05MT0FEX0JUTi5JQ09OX1VSTCwKCQkJJ2JhY2tncm91bmQtcmVwZWF0JzogJ25vLXJlcGVhdCcsCgkJCSdiYWNrZ3JvdW5kLXBvc2l0aW9uJzogJzEzcHggY2VudGVyJywKCQkJJ2JhY2tncm91bmQtc2l6ZSc6ICcxNnB4IDE0cHgnCgkJfSwgZnVuY3Rpb24oKSB7CgkJCXRoaXMuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gWkNPT0xfVkFMVUUuRE9XTkxPQURfQlROLkJBQ0tHUk9VTkRfQ09MT1IuTU9VU0VfRU5URVIKCQl9LCBmdW5jdGlvbigpIHsKCQkJdGhpcy5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBaQ09PTF9WQUxVRS5ET1dOTE9BRF9CVE4uQkFDS0dST1VORF9DT0xPUi5NT1VTRV9MRUFWRQoJCX0pOwoJCXJldHVybiBkb3dubG9hZF9idG4KCX0KCWZ1bmN0aW9uIGFkZF9Eb3dubG9hZF9BbGxfQnRuKCkgewoJCWxldCBkb3dubG9hZF9kaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsKCQlkb3dubG9hZF9kaXYuY2xhc3NOYW1lID0gJ3NpZGViYXItZml4ZWRfYm94IGNvbGxlY3QtbWlkZGxlLWljb24nOwoJCWRvd25sb2FkX2Rpdi5zdHlsZS5iYWNrZ3JvdW5kSW1hZ2UgPSAndXJsKGh0dHBzOi8vc3RhdGljLmhlbGxvcmYuY29tL3YxODA4MTcxMTU3MDAvaGVsbG9yZi9pbWFnZXMvaWNvbnBpYy1yLWNhY2hlLnN2ZyknOwoJCWRvd25sb2FkX2Rpdi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKCkgewoJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZChET1dOTE9BRF9QSUMuU1RSSU5HLklEX05BTUUpLmNsaWNrKCkKCQl9KTsKCQlsZXQgZG93bmxvYWRfYWxsX29iaiA9IG5ldyBEb3dubG9hZF9BbGxfUGljX09iaigpOwoJCWRvd25sb2FkX2FsbF9vYmouc2V0VGV4dFZhbHVlKCcnKTsKCQlsZXQgZG93bmxvYWRfYWxsX2J0biA9IGRvd25sb2FkX2FsbF9vYmouY3JlYXRlRG93bmxvYWRCdG4oRE9XTkxPQURfUElDLlNUUklORy5DTEFTU19OQU1FKTsKCQlkb3dubG9hZF9kaXYuYXBwZW5kQ2hpbGQoZG93bmxvYWRfYWxsX2J0bik7CgkJbGV0IGRvd25sb2FkX3AgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7CgkJZG93bmxvYWRfcC5jbGFzc05hbWUgPSAnc2lkZWJhci1maXhlZF93YXJtLXByb21wdCc7CgkJZG93bmxvYWRfcC5pbm5lclRleHQgPSBET1dOTE9BRF9QSUMuVEVYVC5ET1dOTE9BRF9BTEw7CgkJZG93bmxvYWRfZGl2LmFwcGVuZENoaWxkKGRvd25sb2FkX3ApOwoJCXJldHVybiBkb3dubG9hZF9kaXYKCX0KCWZ1bmN0aW9uIGFkZF9Qcm9ncmVzc19CdG4oKSB7CgkJbGV0IHByb2dyZXNzX2J0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOwoJCXByb2dyZXNzX2J0bi5pZCA9ICdkaXZQcm9ncmVzcyc7CgkJcHJvZ3Jlc3NfYnRuLmNsYXNzTmFtZSA9ICdzaWRlYmFyLWZpeGVkX2JveCBjb2xsZWN0LW1pZGRsZS1pY29uJzsKCQlwcm9ncmVzc19idG4uc3R5bGUuYmFja2dyb3VuZEltYWdlID0gJ25vbmUnOwoJCWxldCBwX3RleHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7CgkJcF90ZXh0LmlkID0gJ3Byb2dyZXNzVGV4dCc7CgkJcF90ZXh0LmNsYXNzTmFtZSA9ICdzaWRlYmFyLWZpeGVkX3dhcm0tcHJvbXB0JzsKCQlwX3RleHQuaW5uZXJUZXh0ID0gJ+S4i+i9vei/m+W6pic7CgkJcHJvZ3Jlc3NfYnRuLmFwcGVuZENoaWxkKHBfdGV4dCk7CgkJbGV0IHBfYnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpOwoJCXBfYnRuLmlkID0gJ3Byb2dyZXNzQnRuJzsKCQlwX2J0bi5pbm5lclRleHQgPSBudW1iZXJfb2JqLmdldFByb2dyZXNzU3RyaW5nKCk7CgkJJChwX2J0bikuY3NzKHsKCQkJJ3RleHQtYWxpZ24nOiAnY2VudGVyJywKCQkJJ2xpbmUtaGVpZ2h0JzogJzUwcHgnLAoJCX0pOwoJCXByb2dyZXNzX2J0bi5hcHBlbmRDaGlsZChwX2J0bik7CgkJcmV0dXJuIHByb2dyZXNzX2J0bgoJfQoJZnVuY3Rpb24gcGljX0luaXQoY19udW0pIHsKCQlsZXQgd29ya19pbWdfZ3JvdXAgPSAkKCJkaXYud29yay1zaG93LWJveCBpbWciKTsKCQlmb3IgKDsgY19udW0gPCB3b3JrX2ltZ19ncm91cC5sZW5ndGg7IGNfbnVtKyspIHsKCQkJd29ya19pbWdfZ3JvdXAuZXEoY19udW0pLnBhcmVudCgpLmNzcygncG9zaXRpb24nLCAncmVsYXRpdmUnKTsKCQkJbGV0IHdvcmtfaW1nX3NyYyA9IHdvcmtfaW1nX2dyb3VwLmVxKGNfbnVtKS5hdHRyKCdzcmMnKTsKCQkJd29ya19pbWdfc3JjID0gWkNPT0xfVkFMVUUuR1JPVVBfUkVHLmV4ZWMod29ya19pbWdfc3JjKVswXTsKCQkJd29ya19pbWdfZ3JvdXAuZXEoY19udW0pLmFmdGVyKGFkZF9Eb3dubG9hZF9CdG4od29ya19pbWdfc3JjLCBjX251bSkpCgkJfQoJCXJldHVybiBjX251bQoJfQoJZnVuY3Rpb24gaW5pdCgpIHsKCQlsZXQgY291bnRfbnVtID0gMDsKCQljb3VudF9udW0gPSBwaWNfSW5pdChjb3VudF9udW0pOwoJCWxldCBmaXhlZF9ib3ggPSAkKCcuZGV0YWlscy1zaWRlYmFyLWZpeGVkLWJveCcpOwoJCWZpeGVkX2JveC5wcmVwZW5kKGFkZF9Qcm9ncmVzc19CdG4oKSk7CgkJZml4ZWRfYm94LnByZXBlbmQoYWRkX0Rvd25sb2FkX0FsbF9CdG4oKSk7CgkJbGV0IG9ic2VydmVyID0gbmV3IE11dGF0aW9uT2JzZXJ2ZXIoZnVuY3Rpb24oKSB7CgkJCWNvdW50X251bSA9IHBpY19Jbml0KGNvdW50X251bSkKCQl9KTsKCQlsZXQgbGlzdGVuZXJfY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiZGl2Lndvcmstc2hvdy1ib3giKTsKCQlsZXQgb3B0aW9uID0gewoJCQknY2hpbGRMaXN0JzogdHJ1ZQoJCX07CgkJb2JzZXJ2ZXIub2JzZXJ2ZShsaXN0ZW5lcl9jb250YWluZXIsIG9wdGlvbikKCX0KCWluaXQoKQp9KSgpOw==","requires":[{"meta":{"name":"FileSaver.min.js","url":"https://cdn.bootcss.com/FileSaver.js/1.3.8/FileSaver.min.js","ts":1571242711208,"mimetype":"text/javascript"},"source":"LyohIEBzb3VyY2UgaHR0cDovL3B1cmwuZWxpZ3JleS5jb20vZ2l0aHViL0ZpbGVTYXZlci5qcy9ibG9iL21hc3Rlci9GaWxlU2F2ZXIuanMgKi8KdmFyIHNhdmVBcz1zYXZlQXN8fGZ1bmN0aW9uKGUpeyJ1c2Ugc3RyaWN0IjtpZih0eXBlb2YgZT09PSJ1bmRlZmluZWQifHx0eXBlb2YgbmF2aWdhdG9yIT09InVuZGVmaW5lZCImJi9NU0lFIFsxLTldXC4vLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCkpe3JldHVybn12YXIgdD1lLmRvY3VtZW50LG49ZnVuY3Rpb24oKXtyZXR1cm4gZS5VUkx8fGUud2Via2l0VVJMfHxlfSxyPXQuY3JlYXRlRWxlbWVudE5TKCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIiwiYSIpLG89ImRvd25sb2FkImluIHIsYT1mdW5jdGlvbihlKXt2YXIgdD1uZXcgTW91c2VFdmVudCgiY2xpY2siKTtlLmRpc3BhdGNoRXZlbnQodCl9LGk9L2NvbnN0cnVjdG9yL2kudGVzdChlLkhUTUxFbGVtZW50KXx8ZS5zYWZhcmksZj0vQ3JpT1NcL1tcZF0rLy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpLHU9ZnVuY3Rpb24odCl7KGUuc2V0SW1tZWRpYXRlfHxlLnNldFRpbWVvdXQpKGZ1bmN0aW9uKCl7dGhyb3cgdH0sMCl9LHM9ImFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbSIsZD0xZTMqNDAsYz1mdW5jdGlvbihlKXt2YXIgdD1mdW5jdGlvbigpe2lmKHR5cGVvZiBlPT09InN0cmluZyIpe24oKS5yZXZva2VPYmplY3RVUkwoZSl9ZWxzZXtlLnJlbW92ZSgpfX07c2V0VGltZW91dCh0LGQpfSxsPWZ1bmN0aW9uKGUsdCxuKXt0PVtdLmNvbmNhdCh0KTt2YXIgcj10Lmxlbmd0aDt3aGlsZShyLS0pe3ZhciBvPWVbIm9uIit0W3JdXTtpZih0eXBlb2Ygbz09PSJmdW5jdGlvbiIpe3RyeXtvLmNhbGwoZSxufHxlKX1jYXRjaChhKXt1KGEpfX19fSxwPWZ1bmN0aW9uKGUpe2lmKC9eXHMqKD86dGV4dFwvXFMqfGFwcGxpY2F0aW9uXC94bWx8XFMqXC9cUypcK3htbClccyo7LipjaGFyc2V0XHMqPVxzKnV0Zi04L2kudGVzdChlLnR5cGUpKXtyZXR1cm4gbmV3IEJsb2IoW1N0cmluZy5mcm9tQ2hhckNvZGUoNjUyNzkpLGVdLHt0eXBlOmUudHlwZX0pfXJldHVybiBlfSx2PWZ1bmN0aW9uKHQsdSxkKXtpZighZCl7dD1wKHQpfXZhciB2PXRoaXMsdz10LnR5cGUsbT13PT09cyx5LGg9ZnVuY3Rpb24oKXtsKHYsIndyaXRlc3RhcnQgcHJvZ3Jlc3Mgd3JpdGUgd3JpdGVlbmQiLnNwbGl0KCIgIikpfSxTPWZ1bmN0aW9uKCl7aWYoKGZ8fG0mJmkpJiZlLkZpbGVSZWFkZXIpe3ZhciByPW5ldyBGaWxlUmVhZGVyO3Iub25sb2FkZW5kPWZ1bmN0aW9uKCl7dmFyIHQ9Zj9yLnJlc3VsdDpyLnJlc3VsdC5yZXBsYWNlKC9eZGF0YTpbXjtdKjsvLCJkYXRhOmF0dGFjaG1lbnQvZmlsZTsiKTt2YXIgbj1lLm9wZW4odCwiX2JsYW5rIik7aWYoIW4pZS5sb2NhdGlvbi5ocmVmPXQ7dD11bmRlZmluZWQ7di5yZWFkeVN0YXRlPXYuRE9ORTtoKCl9O3IucmVhZEFzRGF0YVVSTCh0KTt2LnJlYWR5U3RhdGU9di5JTklUO3JldHVybn1pZigheSl7eT1uKCkuY3JlYXRlT2JqZWN0VVJMKHQpfWlmKG0pe2UubG9jYXRpb24uaHJlZj15fWVsc2V7dmFyIG89ZS5vcGVuKHksIl9ibGFuayIpO2lmKCFvKXtlLmxvY2F0aW9uLmhyZWY9eX19di5yZWFkeVN0YXRlPXYuRE9ORTtoKCk7Yyh5KX07di5yZWFkeVN0YXRlPXYuSU5JVDtpZihvKXt5PW4oKS5jcmVhdGVPYmplY3RVUkwodCk7c2V0VGltZW91dChmdW5jdGlvbigpe3IuaHJlZj15O3IuZG93bmxvYWQ9dTthKHIpO2goKTtjKHkpO3YucmVhZHlTdGF0ZT12LkRPTkV9KTtyZXR1cm59UygpfSx3PXYucHJvdG90eXBlLG09ZnVuY3Rpb24oZSx0LG4pe3JldHVybiBuZXcgdihlLHR8fGUubmFtZXx8ImRvd25sb2FkIixuKX07aWYodHlwZW9mIG5hdmlnYXRvciE9PSJ1bmRlZmluZWQiJiZuYXZpZ2F0b3IubXNTYXZlT3JPcGVuQmxvYil7cmV0dXJuIGZ1bmN0aW9uKGUsdCxuKXt0PXR8fGUubmFtZXx8ImRvd25sb2FkIjtpZighbil7ZT1wKGUpfXJldHVybiBuYXZpZ2F0b3IubXNTYXZlT3JPcGVuQmxvYihlLHQpfX13LmFib3J0PWZ1bmN0aW9uKCl7fTt3LnJlYWR5U3RhdGU9dy5JTklUPTA7dy5XUklUSU5HPTE7dy5ET05FPTI7dy5lcnJvcj13Lm9ud3JpdGVzdGFydD13Lm9ucHJvZ3Jlc3M9dy5vbndyaXRlPXcub25hYm9ydD13Lm9uZXJyb3I9dy5vbndyaXRlZW5kPW51bGw7cmV0dXJuIG19KHR5cGVvZiBzZWxmIT09InVuZGVmaW5lZCImJnNlbGZ8fHR5cGVvZiB3aW5kb3chPT0idW5kZWZpbmVkIiYmd2luZG93fHx0aGlzLmNvbnRlbnQpO2lmKHR5cGVvZiBtb2R1bGUhPT0idW5kZWZpbmVkIiYmbW9kdWxlLmV4cG9ydHMpe21vZHVsZS5leHBvcnRzLnNhdmVBcz1zYXZlQXN9ZWxzZSBpZih0eXBlb2YgZGVmaW5lIT09InVuZGVmaW5lZCImJmRlZmluZSE9PW51bGwmJmRlZmluZS5hbWQhPT1udWxsKXtkZWZpbmUoIkZpbGVTYXZlci5qcyIsZnVuY3Rpb24oKXtyZXR1cm4gc2F2ZUFzfSl9Cg=="},{"meta":{"name":"downloadPic.js","url":"https://greasyfork.org/scripts/376157-downloadpic/code/downloadPic.js?version=733967","ts":1571242711210,"mimetype":"text/javascript"},"source":""}]},{"name":"豆瓣资源下载大师：1秒搞定豆瓣电影|音乐|图书下载","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["*"],"orig_excludes":[],"orig_includes":["https://movie.douban.com/*","https://music.douban.com/*","https://book.douban.com/*","https://bangumi.moe/search/title*","https://desitorrents.tv/*","http://www.dingzi66.com/q*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":["bimzcy.github.io","*"],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1571242711249},"enabled":true,"position":7,"file_url":"https://greasyfork.org/scripts/329484-%E8%B1%86%E7%93%A3%E8%B5%84%E6%BA%90%E4%B8%8B%E8%BD%BD%E5%A4%A7%E5%B8%88-1%E7%A7%92%E6%90%9E%E5%AE%9A%E8%B1%86%E7%93%A3%E7%94%B5%E5%BD%B1-%E9%9F%B3%E4%B9%90-%E5%9B%BE%E4%B9%A6%E4%B8%8B%E8%BD%BD/code/%E8%B1%86%E7%93%A3%E8%B5%84%E6%BA%90%E4%B8%8B%E8%BD%BD%E5%A4%A7%E5%B8%88%EF%BC%9A1%E7%A7%92%E6%90%9E%E5%AE%9A%E8%B1%86%E7%93%A3%E7%94%B5%E5%BD%B1%7C%E9%9F%B3%E4%B9%90%7C%E5%9B%BE%E4%B9%A6%E4%B8%8B%E8%BD%BD.user.js","uuid":"c69908fd-b264-4025-84fc-f56b83ba42ea","source":"","requires":[{"meta":{"name":"jquery.min.js","url":"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js","ts":1583810153330,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"encodeToGb2312.js","url":"https://greasyfork.org/scripts/368137-encodeToGb2312/code/encodeToGb2312.js?version=601683","ts":1583810153444,"mimetype":"text/javascript"},"source":""}]},{"name":"YouTube Links","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["googlevideo.com","s.ytimg.com"],"orig_excludes":[],"orig_includes":["http://*.youtube.com/*","http://youtube.com/*","https://*.youtube.com/*","https://youtube.com/*"],"orig_matches":["*://*.youtube.com/*","*://*.googlevideo.com/*","*://s.ytimg.com/yts/jsbin/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1571242711271},"enabled":true,"position":8,"file_url":"https://greasyfork.org/scripts/5566-youtube-links/code/YouTube%20Links.user.js","uuid":"4380cd64-7610-4fa1-8149-771bfc755053","source":""},{"name":"集装箱","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["taobao.com","www.lanzous.com","pan.baidu.com","share.weiyun.com","ypsuperkey.meek.com.cn","newday.me"],"orig_excludes":[],"orig_includes":["*://**/*"],"orig_matches":[],"orig_noframes":true,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{"config_json":"s{\"wpzs_version_date\":\"20200314\",\"wpzs_version_latest\":\"0.2.2\",\"wpzs_wpzs_share_list\":{\"b00n7nu4d\":{\"share_id\":\"b00n7nu4d\",\"share_pwd\":\"0\",\"share_link\":\"https://www.lanzous.com/b00n7nu4d\",\"share_source\":\"lanzous\",\"share_time\":1579666346950},\"b0b89uhcd\":{\"share_id\":\"b0b89uhcd\",\"share_pwd\":\"0\",\"share_link\":\"https://www.lanzous.com/b0b89uhcd\",\"share_source\":\"lanzous\",\"share_time\":1580101923266},\"b0cjwv8yh\":{\"share_id\":\"b0cjwv8yh\",\"share_pwd\":\"0\",\"share_link\":\"https://www.lanzous.com/b0cjwv8yh\",\"share_source\":\"lanzous\",\"share_time\":1580300060781},\"dqWZAuBh0_J9vylFwjz8DQ\":{\"share_id\":\"dqWZAuBh0_J9vylFwjz8DQ\",\"share_pwd\":\"2333\",\"share_link\":\"https://pan.baidu.com/share/init?surl=dqWZAuBh0_J9vylFwjz8DQ\",\"share_source\":\"baidu\",\"share_time\":1581751798988},\"d1OntdiwfyP6iiieIFEToA\":{\"share_id\":\"d1OntdiwfyP6iiieIFEToA\",\"share_pwd\":\"mpb1\",\"share_link\":\"https://pan.baidu.com/share/init?surl=d1OntdiwfyP6iiieIFEToA\",\"share_source\":\"baidu\",\"share_time\":1582201693733},\"i956tkj\":{\"share_id\":\"i956tkj\",\"share_pwd\":\"ecrf\",\"share_link\":\"https://www.lanzous.com/i956tkj\",\"share_source\":\"lanzous\",\"share_time\":1583121848244},\"dyX8CKIEHik15gDiWShXCQ\":{\"share_id\":\"dyX8CKIEHik15gDiWShXCQ\",\"share_pwd\":\"r7lj\",\"share_link\":\"https://pan.baidu.com/share/init?surl=dyX8CKIEHik15gDiWShXCQ\",\"share_source\":\"baidu\",\"share_time\":1583724410974},\"AuGLiYUfcV7EDBvOjGuTbg\":{\"share_id\":\"AuGLiYUfcV7EDBvOjGuTbg\",\"share_pwd\":\"cvb2\",\"share_link\":\"https://pan.baidu.com/share/init?surl=AuGLiYUfcV7EDBvOjGuTbg\",\"share_source\":\"baidu\",\"share_time\":1583726501416},\"i9fffhg\":{\"share_id\":\"i9fffhg\",\"share_pwd\":\"au89\",\"share_link\":\"https://www.lanzous.com/i9fffhg\",\"share_source\":\"lanzous\",\"share_time\":1583939268006},\"5y0tGaX5575GX6WqI5cKQw\":{\"share_id\":\"5y0tGaX5575GX6WqI5cKQw\",\"share_pwd\":\"jf2y\",\"share_link\":\"https://pan.baidu.com/share/init?surl=5y0tGaX5575GX6WqI5cKQw\",\"share_source\":\"baidu\",\"share_time\":1583985465823}},\"wpzs_option\":{\"send_usage\":\"yes\",\"baidu_page_home\":\"yes\",\"baidu_page_share\":\"yes\",\"baidu_page_verify\":\"yes\",\"baidu_share_status\":\"yes\",\"baidu_custom_password\":\"yes\",\"baidu_show_origin\":\"yes\",\"baidu_multi_link\":\"no\",\"baidu_auto_jump\":\"no\",\"weiyun_page_verify\":\"yes\",\"weiyun_share_status\":\"yes\",\"weiyun_auto_jump\":\"no\",\"lanzous_page_verify\":\"yes\",\"lanzous_share_status\":\"yes\",\"lanzous_auto_jump\":\"no\"},\"yhg_version_date\":\"20200311\",\"yhg_dialog\":0,\"yhg_version_latest\":\"1.3.0\"}","uid":"shz6gn9pqk68t8lbqpr798metunqq3jlh","wpzs_optionJson":"s{\"send_usage\":\"yes\",\"baidu_page_home\":\"yes\",\"baidu_page_share\":\"yes\",\"baidu_page_verify\":\"yes\",\"baidu_share_status\":\"yes\",\"baidu_custom_password\":\"yes\",\"baidu_show_origin\":\"yes\",\"baidu_multi_link\":\"no\",\"baidu_auto_jump\":\"no\",\"weiyun_page_verify\":\"yes\",\"weiyun_share_status\":\"yes\",\"weiyun_auto_jump\":\"no\",\"lanzous_page_verify\":\"yes\",\"lanzous_share_status\":\"no\",\"lanzous_auto_jump\":\"no\"}","wpzs_share_log_json":"s{\"BS9TEes2kzhmicGHMiu3tQ\":{\"share_id\":\"BS9TEes2kzhmicGHMiu3tQ\",\"share_pwd\":\"yfu8\",\"share_link\":\"https://pan.baidu.com/share/init?surl=BS9TEes2kzhmicGHMiu3tQ\",\"share_source\":\"baidu\",\"share_time\":1574569308156},\"b00n4qm3e\":{\"share_id\":\"b00n4qm3e\",\"share_pwd\":\"0\",\"share_link\":\"https://www.lanzous.com/b00n4qm3e\",\"share_source\":\"lanzous\",\"share_time\":1574925278462},\"R910GmeMAm1JEJQJ5BAgNQ\":{\"share_id\":\"R910GmeMAm1JEJQJ5BAgNQ\",\"share_pwd\":\"rxzv\",\"share_link\":\"https://pan.baidu.com/share/init?surl=R910GmeMAm1JEJQJ5BAgNQ\",\"share_source\":\"baidu\",\"share_time\":1575342417225},\"b00n7e6md\":{\"share_id\":\"b00n7e6md\",\"share_pwd\":\"0\",\"share_link\":\"https://www.lanzous.com/b00n7e6md\",\"share_source\":\"lanzous\",\"share_time\":1575346928048}}","wpzs_uid":"sx4rkih20moop7n3om1suugd52n29k3z5","yhg_configJson":"s{\"version_date\":\"20191202\",\"version_latest\":\"1.3.0\",\"dialog\":0}","yhg_uid":"s551il5fqs8p06dkvacn2gjyf6zipoacy"},"ts":1584164664300},"enabled":true,"position":9,"file_url":"https://greasyfork.org/scripts/382927-%E9%9B%86%E8%A3%85%E7%AE%B1/code/%E9%9B%86%E8%A3%85%E7%AE%B1.user.js","uuid":"b2a31fb1-f42f-47f2-8cbe-9d651ec84c8f","source":"","requires":[{"meta":{"name":"jquery.min.js","url":"https://cdn.staticfile.org/jquery/1.12.4/jquery.min.js","ts":1584071792125,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"snap.svg-min.js","url":"https://cdn.staticfile.org/snap.svg/0.5.1/snap.svg-min.js","ts":1584071792117,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"echarts.min.js","url":"https://cdn.staticfile.org/echarts/4.1.0/echarts.min.js","ts":1584071792211,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"qrcode.min.js","url":"https://cdn.staticfile.org/qrcode-generator/1.4.3/qrcode.min.js","ts":1584071792136,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"vue.min.js","url":"https://cdn.staticfile.org/vue/2.6.6/vue.min.js","ts":1584071792156,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"findAndReplaceDOMText.min.js","url":"https://cdn.staticfile.org/findAndReplaceDOMText/0.4.6/findAndReplaceDOMText.min.js","ts":1584071792147,"mimetype":"text/javascript"},"source":""}]},{"name":"Aria2下载助手","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["baidu.com","baidupcs.com","bilibili.com","111.229.137.150","127.0.0.1","localhost","self"],"orig_excludes":[],"orig_includes":["https://pan.baidu.com/*","https://yun.baidu.com/*","https://wallhaven.cc/*","https://www.bilibili.com/video/av*","https://www.bilibili.com/bangumi/play/*","https://live.bilibili.com/*","https://space.bilibili.com/*","https://search.bilibili.com/*","https://nyaa.fun/*","https://nyaa.si/*","https://sukebei.nyaa.si/*","https://nyaa.mlyx.workers.dev/*","https://acg.rip/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1575342523153,"data":{}},"enabled":true,"position":10,"file_url":"https://greasyfork.org/scripts/390707-aria2%E4%B8%8B%E8%BD%BD%E5%8A%A9%E6%89%8B/code/Aria2%E4%B8%8B%E8%BD%BD%E5%8A%A9%E6%89%8B.user.js","uuid":"0467382b-df6e-4231-bb4a-f747609c92d1","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWVzcGFjZSB6eXh1YmluZwovLyBAbmFtZSBBcmlhMuS4i+i9veWKqeaJiwovLyBAZGVzY3JpcHRpb24gVGhpcyBzY3JpcHQgd2FzIGRlbGV0ZWQgZnJvbSBHcmVhc3kgRm9yaywgYW5kIGR1ZSB0byBpdHMgbmVnYXRpdmUgZWZmZWN0cywgaXQgaGFzIGJlZW4gYXV0b21hdGljYWxseSByZW1vdmVkIGZyb20geW91ciBicm93c2VyLgovLyBAdmVyc2lvbiAwLjMuMy4xCi8vIEBpbmNsdWRlIGh0dHBzOi8vcGFuLmJhaWR1LmNvbS8qCi8vIEBpbmNsdWRlIGh0dHBzOi8veXVuLmJhaWR1LmNvbS8qCi8vIEBpbmNsdWRlIGh0dHBzOi8vd2FsbGhhdmVuLmNjLyoKLy8gQGluY2x1ZGUgaHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL2F2KgovLyBAaW5jbHVkZSBodHRwczovL3d3dy5iaWxpYmlsaS5jb20vYmFuZ3VtaS9wbGF5LyoKLy8gQGluY2x1ZGUgaHR0cHM6Ly9saXZlLmJpbGliaWxpLmNvbS8qCi8vIEBpbmNsdWRlIGh0dHBzOi8vc3BhY2UuYmlsaWJpbGkuY29tLyoKLy8gQGluY2x1ZGUgaHR0cHM6Ly9zZWFyY2guYmlsaWJpbGkuY29tLyoKLy8gQGluY2x1ZGUgaHR0cHM6Ly9ueWFhLmZ1bi8qCi8vIEBpbmNsdWRlIGh0dHBzOi8vbnlhYS5zaS8qCi8vIEBpbmNsdWRlIGh0dHBzOi8vc3VrZWJlaS5ueWFhLnNpLyoKLy8gQGluY2x1ZGUgaHR0cHM6Ly9ueWFhLm1seXgud29ya2Vycy5kZXYvKgovLyBAaW5jbHVkZSBodHRwczovL2FjZy5yaXAvKgovLyBAZG9tYWluIGJhaWR1LmNvbQovLyBAZG9tYWluIGJhaWR1cGNzLmNvbQovLyBAZG9tYWluIGJpbGliaWxpLmNvbQovLyBAZG9tYWluIDExMS4yMjkuMTM3LjE1MAovLyBAZG9tYWluIDEyNy4wLjAuMQovLyBAZG9tYWluIGxvY2FsaG9zdAovLyBAZG9tYWluIHNlbGYKLy8gQGdyYW50IEdNX2Nvb2tpZQovLyBAZ3JhbnQgR01fc2V0Q2xpcGJvYXJkCi8vIEBncmFudCBHTV94bWxodHRwUmVxdWVzdAovLyBAcnVuLWF0IGRvY3VtZW50LWlkbGUKLy8gPT0vVXNlclNjcmlwdD09Cg=="},{"name":"视频跳过广告和 VIP 视频解析","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://v.qq.com/x/cover/*","*://v.qq.com/x/page/*","*://www.iqiyi.com/v*","*://v.youku.com/v_show/*","*://www.mgtv.com/b/*","*://tv.sohu.com/v/*","*://film.sohu.com/album/*","*://www.le.com/ptv/vplay/*","*://video.tudou.com/v/*","*://v.pptv.com/show/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1582364134118,"data":{}},"enabled":false,"position":11,"file_url":"https://greasyfork.org/scripts/373063-%E8%A7%86%E9%A2%91%E8%B7%B3%E8%BF%87%E5%B9%BF%E5%91%8A%E5%92%8C-vip-%E8%A7%86%E9%A2%91%E8%A7%A3%E6%9E%90/code/%E8%A7%86%E9%A2%91%E8%B7%B3%E8%BF%87%E5%B9%BF%E5%91%8A%E5%92%8C%20VIP%20%E8%A7%86%E9%A2%91%E8%A7%A3%E6%9E%90.user.js","uuid":"8c4aa6af-7440-410c-9d12-c7fe77fe6234","source":"","requires":[{"meta":{"name":"jquery.min.js","url":"https://cdn.bootcss.com/jquery/1.12.4/jquery.min.js","ts":1582364134220,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"gm4-polyfill.js","url":"https://greasemonkey.github.io/gm4-polyfill/gm4-polyfill.js","ts":1582364134304,"mimetype":"text/javascript"},"source":"LyoKVGhpcyBoZWxwZXIgc2NyaXB0IGJyaWRnZXMgY29tcGF0aWJpbGl0eSBiZXR3ZWVuIHRoZSBHcmVhc2Vtb25rZXkgNCBBUElzIGFuZApleGlzdGluZy9sZWdhY3kgQVBJcy4gIFNheSBmb3IgZXhhbXBsZSB5b3VyIHVzZXIgc2NyaXB0IGluY2x1ZGVzCgogICAgLy8gQGdyYW50IEdNX2dldFZhbHVlCgpBbmQgeW91J2QgbGlrZSB0byBiZSBjb21wYXRpYmxlIHdpdGggYm90aCBHcmVhc2Vtb25rZXkgMyBhbmQgR3JlYXNlbW9ua2V5IDQKKGFuZCBmb3IgdGhhdCBtYXR0ZXIgYWxsIHZlcnNpb25zIG9mIFZpb2xlbnRtb25rZXksIFRhbXBlcm1vbmtleSwgYW5kIGFueSBvdGhlcgp1c2VyIHNjcmlwdCBlbmdpbmUpLiAgQWRkOgoKICAgIC8vIEBncmFudCBHTS5nZXRWYWx1ZQogICAgLy8gQHJlcXVpcmUgaHR0cHM6Ly9ncmVhc2Vtb25rZXkuZ2l0aHViLmlvL2dtNC1wb2x5ZmlsbC9nbTQtcG9seWZpbGwuanMKCkFuZCBzd2l0Y2ggdG8gdGhlIG5ldyAoR00tZG90KSBBUElzLCB3aGljaCByZXR1cm4gcHJvbWlzZXMuICBJZiB5b3VyIHNjcmlwdAppcyBydW5uaW5nIGluIGFuIGVuZ2luZSB0aGF0IGRvZXMgbm90IHByb3ZpZGUgdGhlIG5ldyBhc3luY2hyb25vdXMgQVBJcywgdGhpcwpoZWxwZXIgd2lsbCBhZGQgdGhlbSwgYmFzZWQgb24gdGhlIG9sZCBBUElzLgoKSWYgeW91IHVzZSBgYXdhaXRgIGF0IHRoZSB0b3AgbGV2ZWwsIHlvdSdsbCBuZWVkIHRvIHdyYXAgeW91ciBzY3JpcHQgaW4gYW4KYGFzeW5jYCBmdW5jdGlvbiB0byBiZSBjb21wYXRpYmxlIHdpdGggYW55IHVzZXIgc2NyaXB0IGVuZ2luZSBiZXNpZGVzCkdyZWFzZW1vbmtleSA0LgoKICAgIChhc3luYyAoKSA9PiB7CiAgICBsZXQgeCA9IGF3YWl0IEdNLmdldFZhbHVlKCd4Jyk7CiAgICB9KSgpOwoqLwoKaWYgKHR5cGVvZiBHTSA9PSAndW5kZWZpbmVkJykgewogIHRoaXMuR00gPSB7fTsKfQoKCmlmICh0eXBlb2YgR01fYWRkU3R5bGUgPT0gJ3VuZGVmaW5lZCcpIHsKICB0aGlzLkdNX2FkZFN0eWxlID0gKGFDc3MpID0+IHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIGxldCBoZWFkID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2hlYWQnKVswXTsKICAgIGlmIChoZWFkKSB7CiAgICAgIGxldCBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7CiAgICAgIHN0eWxlLnNldEF0dHJpYnV0ZSgndHlwZScsICd0ZXh0L2NzcycpOwogICAgICBzdHlsZS50ZXh0Q29udGVudCA9IGFDc3M7CiAgICAgIGhlYWQuYXBwZW5kQ2hpbGQoc3R5bGUpOwogICAgICByZXR1cm4gc3R5bGU7CiAgICB9CiAgICByZXR1cm4gbnVsbDsKICB9Owp9CgoKaWYgKHR5cGVvZiBHTV9yZWdpc3Rlck1lbnVDb21tYW5kID09ICd1bmRlZmluZWQnKSB7CiAgdGhpcy5HTV9yZWdpc3Rlck1lbnVDb21tYW5kID0gKGNhcHRpb24sIGNvbW1hbmRGdW5jLCBhY2Nlc3NLZXkpID0+IHsKICAgIGlmICghZG9jdW1lbnQuYm9keSkgewogICAgICBpZiAoZG9jdW1lbnQucmVhZHlTdGF0ZSA9PT0gJ2xvYWRpbmcnCiAgICAgICAgJiYgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50ICYmIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5sb2NhbE5hbWUgPT09ICdodG1sJykgewogICAgICAgIG5ldyBNdXRhdGlvbk9ic2VydmVyKChtdXRhdGlvbnMsIG9ic2VydmVyKSA9PiB7CiAgICAgICAgICBpZiAoZG9jdW1lbnQuYm9keSkgewogICAgICAgICAgICBvYnNlcnZlci5kaXNjb25uZWN0KCk7CiAgICAgICAgICAgIEdNX3JlZ2lzdGVyTWVudUNvbW1hbmQoY2FwdGlvbiwgY29tbWFuZEZ1bmMsIGFjY2Vzc0tleSk7CiAgICAgICAgICB9CiAgICAgICAgfSkub2JzZXJ2ZShkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsIHtjaGlsZExpc3Q6IHRydWV9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICBjb25zb2xlLmVycm9yKCdHTV9yZWdpc3Rlck1lbnVDb21tYW5kIGdvdCBubyBib2R5LicpOwogICAgICB9CiAgICAgIHJldHVybjsKICAgIH0KICAgIGxldCBjb250ZXh0TWVudSA9IGRvY3VtZW50LmJvZHkuZ2V0QXR0cmlidXRlKCdjb250ZXh0bWVudScpOwogICAgbGV0IG1lbnUgPSAoY29udGV4dE1lbnUgPyBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdtZW51IycgKyBjb250ZXh0TWVudSkgOiBudWxsKTsKICAgIGlmICghbWVudSkgewogICAgICBtZW51ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbWVudScpOwogICAgICBtZW51LnNldEF0dHJpYnV0ZSgnaWQnLCAnZ20tcmVnaXN0ZXJlZC1tZW51Jyk7CiAgICAgIG1lbnUuc2V0QXR0cmlidXRlKCd0eXBlJywgJ2NvbnRleHQnKTsKICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChtZW51KTsKICAgICAgZG9jdW1lbnQuYm9keS5zZXRBdHRyaWJ1dGUoJ2NvbnRleHRtZW51JywgJ2dtLXJlZ2lzdGVyZWQtbWVudScpOwogICAgfQogICAgbGV0IG1lbnVJdGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbWVudWl0ZW0nKTsKICAgIG1lbnVJdGVtLnRleHRDb250ZW50ID0gY2FwdGlvbjsKICAgIG1lbnVJdGVtLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgY29tbWFuZEZ1bmMsIHRydWUpOwogICAgbWVudS5hcHBlbmRDaGlsZChtZW51SXRlbSk7CiAgfTsKfQoKCmlmICh0eXBlb2YgR01fZ2V0UmVzb3VyY2VUZXh0ID09ICd1bmRlZmluZWQnKSB7CiAgdGhpcy5HTV9nZXRSZXNvdXJjZVRleHQgPSAoYVJlcykgPT4gewogICAgJ3VzZSBzdHJpY3QnOwogICAgcmV0dXJuIEdNLmdldFJlc291cmNlVXJsKGFSZXMpCiAgICAgIC50aGVuKHVybCA9PiBmZXRjaCh1cmwpKQogICAgICAudGhlbihyZXNwID0+IHJlc3AudGV4dCgpKQogICAgICAuY2F0Y2goZnVuY3Rpb24oZXJyb3IpIHsKICAgICAgICBHTS5sb2coJ1JlcXVlc3QgZmFpbGVkJywgZXJyb3IpOwogICAgICAgIHJldHVybiBudWxsOwogICAgICB9KTsKICB9Owp9CgoKT2JqZWN0LmVudHJpZXMoewogICdsb2cnOiBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpLCAgLy8gUGFsZSBNb29uIGNvbXBhdGliaWxpdHkuICBTZWUgIzEzLgogICdpbmZvJzogR01faW5mbywKfSkuZm9yRWFjaCgoW25ld0tleSwgb2xkXSkgPT4gewogIGlmIChvbGQgJiYgKHR5cGVvZiBHTVtuZXdLZXldID09ICd1bmRlZmluZWQnKSkgewogICAgR01bbmV3S2V5XSA9IG9sZDsKICB9Cn0pOwoKCk9iamVjdC5lbnRyaWVzKHsKICAnR01fYWRkU3R5bGUnOiAnYWRkU3R5bGUnLAogICdHTV9kZWxldGVWYWx1ZSc6ICdkZWxldGVWYWx1ZScsCiAgJ0dNX2dldFJlc291cmNlVVJMJzogJ2dldFJlc291cmNlVXJsJywKICAnR01fZ2V0VmFsdWUnOiAnZ2V0VmFsdWUnLAogICdHTV9saXN0VmFsdWVzJzogJ2xpc3RWYWx1ZXMnLAogICdHTV9ub3RpZmljYXRpb24nOiAnbm90aWZpY2F0aW9uJywKICAnR01fb3BlbkluVGFiJzogJ29wZW5JblRhYicsCiAgJ0dNX3JlZ2lzdGVyTWVudUNvbW1hbmQnOiAncmVnaXN0ZXJNZW51Q29tbWFuZCcsCiAgJ0dNX3NldENsaXBib2FyZCc6ICdzZXRDbGlwYm9hcmQnLAogICdHTV9zZXRWYWx1ZSc6ICdzZXRWYWx1ZScsCiAgJ0dNX3htbGh0dHBSZXF1ZXN0JzogJ3htbEh0dHBSZXF1ZXN0JywKICAnR01fZ2V0UmVzb3VyY2VUZXh0JzogJ2dldFJlc291cmNlVGV4dCcsCn0pLmZvckVhY2goKFtvbGRLZXksIG5ld0tleV0pID0+IHsKICBsZXQgb2xkID0gdGhpc1tvbGRLZXldOwogIGlmIChvbGQgJiYgKHR5cGVvZiBHTVtuZXdLZXldID09ICd1bmRlZmluZWQnKSkgewogICAgR01bbmV3S2V5XSA9IGZ1bmN0aW9uKC4uLmFyZ3MpIHsKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKICAgICAgICB0cnkgewogICAgICAgICAgcmVzb2x2ZShvbGQuYXBwbHkodGhpcywgYXJncykpOwogICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgIHJlamVjdChlKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfTsKICB9Cn0pOwo="}]}],"settings":{"configMode":100,"connect_mode":"off","external_connect":"all","forbiddenPages":["*example.org/*","*paypal.tld/*","*stripe.com/*","https://*deutsche-bank-24.tld/*","https://*bankofamerica.tld/*","/^.*:\\/\\/apis\\.google\\.com\\/((?!render)([^\\/]+)\\/)+([^\\/]+)?$/","*://www.facebook.com/plugins/*","*://platform.twitter.com/widgets/*"],"incognito_mode":"temporary","page_filter_mode":"black","page_whitelist":["/https?:\\/\\/greasyfork\\.org\\/.*/","http://xkcd.com/970/"],"require_sri_mode":"supported","script_blacklist_server":[{"rules":["/https?:\\/\\/userscripts\\.org\\/scripts\\/(source|version)/(102614).*\\.user\\.js/"],"severity":"2"},{"name":"SaveFrom.net helper","reason":"Shows advertisements","rules":["/https?:\\/\\/sf-addon\\.com\\/.*\\/.*\\.user\\.js/","/https?:\\/\\/.*\\.sf-helper\\.com\\/.*\\.user\\.js/"],"severity":"3"},{"reasons":{"en":"Used for a phishing compain to compromise users of baon-nutrition.com"},"rules":["/https?:\\/\\/files\\.ulysse\\.travel\\/.*\\.user\\.js/"],"severity":"8"}],"webrequest_fixCSP":"yes","webrequest_modHeaders":"yes"}}